/* Link list Node 
struct Node {
    int data;
    Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
    
}; */

//using extra space


class Solution{
    public:
    /* Should return data of middle node. If linked list is empty, then  -1*/
    int getMiddle(Node *head)
    {
        vector<int>v;
        struct Node *p;
        p=head;
        while(p!=NULL)
        {
            v.emplace_back(p->data);
            p=p->next;
        }
        int n=v.size();
        return v[n/2];
    }
};


//optimized solution
class Solution{
    public:
    int getMiddle(Node *head)
    {
        struct Node *low=head;
        struct Node *high=head;
        while(high!=NULL and high->next!=NULL)
        {
            low=low->next;
            high=high->next->next;
        }
        return low->data;
    }
};
